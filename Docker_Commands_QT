#To build an image
docker image build -t myapp:0.1 .
-t tag name
. means Dockerfile is present PWD
default dockerfile name-Dockerfile
if dockerfile name specified differently 
docker image build -t myapp:0.1 -f mydockerfile
#To list images
docker image ls


#To run containers in detached mode
docker container run -d jenkins
# To create a container and login into interactive shell
docker container run -it jenkins /bin/bash
docker container run -it alpine /bin/sh
#To list running containers
docker container ls
docker ps
#To list both running and stopped continers
docker container ls -a
docker ps -a
#To remove containers
docker container rm <name-or-id>
docker container rm <name-or-id-container1> <name-or-id-container2> ..
docker container rm -f $(docker container ls -a -q)
-f means force delete
-q displays only container ids

Docker volumes:
#To create/attach volume to while spinning up the container
docker container run -it -v /test:/test mysql /bin/bash
/test:/test--->host:container (source:target)
docker volume create myvol
docker volume ls
docker volume inspect myvol
docker container run --name cont2 -it --mount source=myvol,target=/jars openjdk:8 /bin/bash
#Bind mount volume
docker container run --name cont3 --mount type=bind,source=/app,target=/jars -d -p 8080:8080 openjdk:8 java -jar /jars/spring-petclinic.jar
#tmpfs mount
docker run -d -it --name cont4 --mount type=tmpfs,destination=/app nginx:latest
---------------------------------------------------------------------------------
#command to know container stats
docker stats

docker container start/stop/pause/unpause tomcat
--------------------------------------------------------------------------
Docker network commands:
#To create a new bridge network with range as 10.11.0.0/16 and name as mybridge
docker network create --driver bridge --subnet 10.11.0.0/16 mybridge
docker network ls
docker network inspect mybridge
#To assign mybridge network to a container p1
docker container run --name p1 --network mybridge -d alpine sleep 1d
# test for the connectivity between p1 and p2 using ip and hostnames
docker exec p1 ping -c 3 10.11.0.3
docker exec p1 ping -c 3 p2
Note: -c 3 denotes transfer only 3 packets
#To connect a running container 'c1' to an existing user-defined bridge 'mybridge'
docker network connect mybridge c1
#To disconnect a container from a user-defined bridge
docker network disconnect mybridge c1



